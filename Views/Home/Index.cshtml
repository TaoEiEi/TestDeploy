@model BadmintonCourtManagement.Models.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Badminton Court Management";
}

<div class="container">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i> @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Courts Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold"><i class="bi bi-grid-3x3-gap me-2"></i>Courts</h2>
        <div>
            <a asp-controller="Courts" asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-lg me-1"></i> Add Court
            </a>
        </div>
    </div>

    @if (Model.Courts.Count == 0)
    {
        <div class="card mb-4">
            <div class="card-body text-center p-5">
                <i class="bi bi-emoji-frown display-1 text-muted mb-3"></i>
                <p class="text-muted mb-3">No courts available</p>
                <a asp-controller="Courts" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-lg me-1"></i> Add Your First Court
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="row mb-4">
            @foreach (var courtViewModel in Model.Courts)
            {
                <div class="col-md-4 mb-3">
                    <div class="card h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0 fw-bold">@courtViewModel.Court.Name</h5>
                            <span class="badge @(courtViewModel.Court.Status == CourtStatus.Available ? "bg-success" : "bg-secondary")">
                                @courtViewModel.Court.Status
                            </span>
                        </div>
                        <div class="card-body">
                            <h6 class="fw-bold"><i class="bi bi-people me-2"></i>Players:</h6>
                            @if (courtViewModel.Players.Count > 0)
                            {
                                <ul class="list-group mb-3">
                                    @foreach (var player in courtViewModel.Players)
                                    {
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            @player.Name
                                            <span class="badge bg-primary rounded-pill">@player.ShuttlecocksUsed</span>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted fst-italic">No players assigned</p>
                            }

                            <div class="d-flex gap-2 mt-3">
                                <form asp-controller="Courts" asp-action="EndGame" method="post">
                                    <input type="hidden" name="id" value="@courtViewModel.Court.Id" />
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-danger"
                                    @(courtViewModel.Court.Status == CourtStatus.Available ? "disabled" : "")>
                                        <i class="bi bi-stop-circle me-1"></i> End Game
                                    </button>
                                </form>
                                <form asp-controller="Courts" asp-action="AddShuttlecock" method="post">
                                    <input type="hidden" name="id" value="@courtViewModel.Court.Id" />
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-warning"
                                    @(courtViewModel.Players.Count == 0 ? "disabled" : "")>
                                        <i class="bi bi-plus-circle me-1"></i> Add Shuttlecock
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Players Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold"><i class="bi bi-person-lines-fill me-2"></i>Players</h2>
        <div>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addPlayerModal">
                <i class="bi bi-plus-lg me-1"></i> Add Player
            </button>
        </div>
    </div>

    <div class="mb-4 d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-3">
        <form asp-controller="Home" asp-action="AddSelectedPlayersToAvailableCourt" method="post" class="d-inline">
            @Html.AntiForgeryToken()
            <input type="hidden" name="selectedPlayerIds" id="selectedPlayerIdsInput" value="" />
            <button type="submit" class="btn btn-success" id="addSelectedPlayersBtn" disabled>
                <i class="bi bi-people me-1"></i> Add Selected Players
            </button>
        </form>

        <div class="d-flex flex-column flex-md-row gap-3">
            <div class="d-flex align-items-center">
                <span class="fw-medium me-2">Court Fee:</span>
                <span class="badge bg-light text-dark border">@Model.PriceSetting.CourtRentalFee ฿</span>
            </div>
            <div class="d-flex align-items-center">
                <span class="fw-medium me-2">Shuttlecock Price:</span>
                <span class="badge bg-light text-dark border">@Model.PriceSetting.ShuttlecockPrice ฿</span>
            </div>
            <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#editPriceModal">
                <i class="bi bi-gear me-1"></i> Edit Prices
            </button>
        </div>
    </div>

    @if (Model.Players.Count == 0)
    {
        <div class="card">
            <div class="card-body text-center p-5">
                <i class="bi bi-emoji-frown display-1 text-muted mb-3"></i>
                <p class="text-muted mb-3">No players available</p>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addPlayerModal">
                    <i class="bi bi-plus-lg me-1"></i> Add Your First Player
                </button>
            </div>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th width="50">
                            <input type="checkbox" id="selectAllPlayers" class="form-check-input" />
                        </th>
                        <th>Name</th>
                        <th>Status</th>
                        <th class="text-end">Games Played</th>
                        <th class="text-end">Shuttlecocks Used</th>
                        <th class="text-end">Cost (฿)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var player in Model.Players)
                    {
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" value="@player.Id"
                                       class="form-check-input player-checkbox"
                                @(player.Status == PlayerStatus.Playing ? "disabled" : "") />
                            </td>
                            <td>@player.Name</td>
                            <td>
                                <span class="badge @(player.Status == PlayerStatus.Available ? "bg-success" : "bg-secondary")">
                                    @player.Status
                                </span>
                            </td>
                            <td class="text-end">@player.GamesPlayed</td>
                            <td class="text-end">@player.ShuttlecocksUsed</td>
                            <td class="text-end">
                                @{
                                    decimal cost = (player.ShuttlecocksUsed * Model.PriceSetting.ShuttlecockPrice) +
                                    (player.Status == PlayerStatus.Playing ? Model.PriceSetting.CourtRentalFee : 0);
                                }
                                @cost
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <div class="mt-4">
        <form asp-controller="Courts" asp-action="ClearAll" method="post" onsubmit="return confirm('Are you sure you want to clear all data? This cannot be undone.');">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger">
                <i class="bi bi-trash me-1"></i> Clear All Data
            </button>
        </form>
    </div>
</div>

<!-- Add Player Modal -->
<div class="modal fade" id="addPlayerModal" tabindex="-1" aria-labelledby="addPlayerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="addPlayerModalLabel"><i class="bi bi-person-plus me-2"></i>Add New Player</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-controller="Players" asp-action="Create" method="post">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label class="form-label fw-medium">Name</label>
                        <input name="Name" class="form-control" placeholder="Enter player name" required />
                        <span class="text-danger" id="nameValidation"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Player</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Price Settings Modal -->
<div class="modal fade" id="editPriceModal" tabindex="-1" aria-labelledby="editPriceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="editPriceModalLabel"><i class="bi bi-gear me-2"></i>Edit Price Settings</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-controller="Settings" asp-action="Edit" method="post">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="Id" value="@Model.PriceSetting.Id" />
                    <div class="mb-3">
                        <label class="form-label fw-medium">Shuttlecock Price</label>
                        <div class="input-group">
                            <input name="ShuttlecockPrice" class="form-control" type="number" min="0" step="0.01"
                                   value="@Model.PriceSetting.ShuttlecockPrice" required />
                            <span class="input-group-text">฿</span>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-medium">Court Rental Fee</label>
                        <div class="input-group">
                            <input name="CourtRentalFee" class="form-control" type="number" min="0" step="0.01"
                                   value="@Model.PriceSetting.CourtRentalFee" required />
                            <span class="input-group-text">฿</span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Settings</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle select all checkbox
        document.getElementById('selectAllPlayers')?.addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.player-checkbox:not(:disabled)');
            checkboxes.forEach(checkbox => checkbox.checked = this.checked);
            updateAddSelectedPlayersButton();
        });

        // Handle individual checkboxes
        document.querySelectorAll('.player-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', updateAddSelectedPlayersButton);
        });

        // Update Add Selected Players button and hidden input
        function updateAddSelectedPlayersButton() {
            const selectedCheckboxes = document.querySelectorAll('.player-checkbox:checked');
            const addButton = document.getElementById('addSelectedPlayersBtn');
            const selectedIdsInput = document.getElementById('selectedPlayerIdsInput');

            addButton.disabled = selectedCheckboxes.length === 0;
            const selectedIds = Array.from(selectedCheckboxes).map(cb => cb.value);
            selectedIdsInput.value = selectedIds.join(',');
        }

        // Initialize button state
        updateAddSelectedPlayersButton();
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}